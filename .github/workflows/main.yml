name: build

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches: ['main', 'alpha']

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      needs_build: ${{ steps.filter.outputs.needs_build }}
      templates: ${{ steps.filter.outputs.templates }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 25
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            needs_build:
              - '.github/workflows/**'
              - 'packages/**'
              - 'test/**'
              - 'pnpm-lock.yaml'
              - 'package.json'
            templates:
              - 'templates/**'
      - name: Log all filter results
        run: |
          echo "needs_build: ${{ steps.filter.outputs.needs_build }}"
          echo "templates: ${{ steps.filter.outputs.templates }}"

  core-build:
    needs: changes
    if: ${{ needs.changes.outputs.needs_build == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - run: pnpm install
      - run: pnpm run build:core

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  tests-e2e:
    runs-on: ubuntu-latest
    needs: core-build
    strategy:
      fail-fast: false
      matrix:
        suite:
          - _community
          # Add other suites as needed
    steps:
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Restore build
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Install Playwright
        run: pnpm exec playwright install --with-deps

      - name: E2E Tests
        run: pnpm test:e2e ${{ matrix.suite }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.suite }}
          path: test/test-results/
          retention-days: 1

      - name: Process and Upload Trace Files
        if: always()
        run: |
          # Log all files in the test/test-results directory
          ls -la test/test-results

          # Loop through each folder in the unzipped directory
          for folder in test/test-results/*; do
            if [ -d "$folder" ]; then
              echo "Processing $folder"
              # Assuming trace.zip is directly inside each folder
              TRACE_PATH="$folder/trace.zip"
              if [ -f "$TRACE_PATH" ]; then
                FOLDER_NAME=$(basename "$folder")
                # Copy and rename the trace.zip file
                cp "$TRACE_PATH" "./${FOLDER_NAME}-trace.zip"

                # Now upload the renamed trace.zip as an artifact
                echo "Uploading trace artifact for $FOLDER_NAME"
                gh artifact upload "./${FOLDER_NAME}-trace.zip"
                echo "Uploaded trace artifact for $FOLDER_NAME"
              else
                echo "No trace file found in $folder"
              fi
            fi
          done
        shell: bash

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.suite }}-trace
          path: ./${{ matrix.suite }}-trace.zip

      - name: Display Playwright Trace Viewer URL
        if: always()
        run: |
          echo "Trace Viewer URL for ${{ matrix.suite }} might be accessible through the artifacts on the Actions page of your repository."
